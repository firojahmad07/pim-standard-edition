/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type BackendLabels =
  | {
      /**
       * This interface was referenced by `undefined`'s JSON-Schema definition
       * via the `patternProperty` ".+".
       */
      [k: string]: string;
    }
  | [];
export type BackendAttribute =
  | BackendAttributeMediaFile
  | BackendAttributeMediaLink
  | BackendAttributeText
  | BackendAttributeNumber
  | BackendAttributeOption
  | BackendAttributeOptionCollection
  | BackendAttributeAny;

export interface BackendEditionAsset {
  identifier: string;
  code: string;
  labels: BackendLabels;
  created_at: string;
  updated_at: string;
  image?: BackendEditionValue[];
  asset_family_identifier?: string;
  values: BackendEditionValue[];
  permission?: BackendPermission;
  attribute_as_main_media_identifier?: string;
}
export interface BackendEditionValue {
  data: null | string | BackendMediaFile | string[];
  channel: string | null;
  locale: string | null;
  attribute: BackendAttribute;
}
export interface BackendMediaFile {
  filePath: string;
  originalFilename: string;
  size?: number;
  mimeType?: string;
  extension?: string;
  updatedAt?: string;
}
export interface BackendAttributeMediaFile {
  type: string;
  identifier: string;
  asset_family_identifier: string;
  code: string;
  labels: BackendLabels;
  is_required: boolean;
  is_read_only: boolean;
  order: number;
  value_per_locale: boolean;
  value_per_channel: boolean;
  media_type: string;
  max_file_size: string | null;
  allowed_extensions: string[];
}
export interface BackendAttributeMediaLink {
  type: string;
  identifier: string;
  asset_family_identifier: string;
  code: string;
  labels: BackendLabels;
  is_required: boolean;
  is_read_only: boolean;
  order: number;
  value_per_locale: boolean;
  value_per_channel: boolean;
  media_type: string;
  prefix: string | null;
  suffix: string | null;
}
export interface BackendAttributeText {
  type: string;
  identifier: string;
  asset_family_identifier: string;
  code: string;
  labels: BackendLabels;
  is_required: boolean;
  is_read_only: boolean;
  order: number;
  value_per_locale: boolean;
  value_per_channel: boolean;
  max_length: number | null;
  is_textarea: boolean;
  is_rich_text_editor: boolean;
  validation_rule: string;
  regular_expression: string | null;
}
export interface BackendAttributeNumber {
  type: string;
  identifier: string;
  asset_family_identifier: string;
  code: string;
  labels: BackendLabels;
  is_required: boolean;
  is_read_only: boolean;
  order: number;
  value_per_locale: boolean;
  value_per_channel: boolean;
  max_value: string | null;
  min_value: string | null;
  decimals_allowed: boolean;
}
export interface BackendAttributeOption {
  type: string;
  identifier: string;
  asset_family_identifier: string;
  code: string;
  labels: BackendLabels;
  is_required: boolean;
  is_read_only: boolean;
  order: number;
  value_per_locale: boolean;
  value_per_channel: boolean;
  options: BackendOption[];
}
export interface BackendOption {
  code: string;
  labels: BackendLabels;
}
export interface BackendAttributeOptionCollection {
  type: string;
  identifier: string;
  asset_family_identifier: string;
  code: string;
  labels: BackendLabels;
  is_required: boolean;
  is_read_only: boolean;
  order: number;
  value_per_locale: boolean;
  value_per_channel: boolean;
  options: BackendOption[];
}
export interface BackendAttributeAny {
  type: string;
  identifier: string;
  asset_family_identifier: string;
  code: string;
  labels: BackendLabels;
  is_required: boolean;
  is_read_only: boolean;
  order: number;
  value_per_locale: boolean;
  value_per_channel: boolean;
  [k: string]: any;
}
export interface BackendPermission {
  /**
   * This interface was referenced by `BackendPermission`'s JSON-Schema definition
   * via the `patternProperty` ".+".
   */
  [k: string]: boolean;
}
