version: '3.7'

services:
  php:
    build: .
    container_name: pim-php
    user: www-data
    environment:
      APP_ENV: '${APP_ENV:-prod}'
      COMPOSER_HOME: '/var/www/.composer'
      PHP_IDE_CONFIG: 'serverName=pim-docker-cli'
      XDEBUG_MODE: '${XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: 'client_host=172.17.0.1'
    volumes:
      - ./:/var/www/html
    networks:
      - pim

  nginx:
    image: nginx:alpine
    container_name: pim-nginx
    volumes:
      - ./:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    depends_on:
      - php
    networks:
      - pim
      
  mysql:
    image: 'mysql:8.0.26'
    container_name: pim-mysql
    command: '--default-authentication-plugin=mysql_native_password'
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_USER: '${APP_DATABASE_USER}'
      MYSQL_DATABASE: '${APP_DATABASE_NAME}'
      MYSQL_PASSWORD: '${APP_DATABASE_PASSWORD}'
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - '${DOCKER_PORT_MYSQL:-33006}:3306'
    networks:
      - 'pim'

  adminer:
    image: adminer
    container_name: pim-adminer
    ports:
      - "8081:8080"
    depends_on:
      - mysql
    networks:
      - pim

  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.16.2'
    container_name: pim-elasticsearch
    environment:
      ES_JAVA_OPTS: '${ES_JAVA_OPTS:--Xms512m -Xmx512m}'
      discovery.type: 'single-node'
    ports:
      - '${DOCKER_PORT_ELASTICSEARCH:-9210}:9200'
    networks:
      - 'pim'

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  db_data:
  
networks:
  pim:
    driver: bridge
